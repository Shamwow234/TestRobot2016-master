// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ShooterControl.h"
//Including the ShooterControl.h for the bool data types True/False

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

ShooterControl::ShooterControl(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooterSubsystem.get());
//Only initializing if using the button or bumper

	speed = 1;
	buttonApressed = false;
	//buttonBpressed = false;
	buttonXpressed = false;
<<<<<<< HEAD
	//buttonYpressed = false;
	rightBumperpressed = false;
	//leftBumperpressed = false;


=======
	rightTriggerpressed = 0;
	leftTriggerpressed = 0;
>>>>>>> origin/master
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void ShooterControl::Initialize() {

	speed = 1;
	buttonApressed = false;
	//buttonBpressed = false;
	buttonXpressed = false;
<<<<<<< HEAD
	//buttonYpressed = false;
	rightBumperpressed = false;
	//leftBumperpressed = false;


=======
	rightTriggerpressed = 0;
	leftTriggerpressed = 0;
>>>>>>> origin/master
}

// Called repeatedly when this Command is scheduled to run
void ShooterControl::Execute() {
	buttonApressed = Robot::oi->getGunnerJoystick()->GetRawButton(1);
	buttonBpressed = Robot::oi->getGunnerJoystick()->GetRawButton(2);
	buttonXpressed = Robot::oi->getGunnerJoystick()->GetRawButton(3);
	rightBumperpressed = Robot::oi->getGunnerJoystick()->GetRawButton(5);

	speed = 1;

	if(rightBumperpressed)
	{
		speed = speed / 2;

		if(buttonApressed)
				{
					Robot::shooterSubsystem->Shoot(speed);
				}
				else if(buttonXpressed)
				{
					Robot::shooterSubsystem->Shoot(-1 * (speed));
				}
				else
				{
					Robot::shooterSubsystem->Shoot(0);
				}
	}
	else
	{
		if(buttonApressed)
		{
			Robot::shooterSubsystem->Shoot(speed);
		}
		else if(buttonXpressed)
		{
			Robot::shooterSubsystem->Shoot(-1 * (speed));
		}
		else
		{
			Robot::shooterSubsystem->Shoot(0);
		}
	}

<<<<<<< HEAD
=======
	buttonXpressed = Robot::oi->getGunnerJoystick()->GetRawButton(1);
		if(buttonXpressed)
		{
			Robot::shooterSubsystem->Shoot(1);
		}
		else
		{
			Robot::shooterSubsystem->Shoot(0);
		}

	buttonYpressed = Robot::oi->getGunnerJoystick()->GetRawButton(1);
		if(buttonYpressed)
		{
			Robot::shooterSubsystem->Shoot(1);
		}
		else
		{
		Robot::shooterSubsystem->Shoot(0);
		}
	
	leftTriggerpressed = Robot::oi->getGunnerJoystick()->GetRawButton(1);
		if(leftTriggerpressed > 0 && leftTriggerpressed < 0)
		{
			Robot::shooterSubsystem->Shoot(1)
		}
		else
		{
			Robot::shooterSubsystem->Shoot(0)
		}
		
	rightTriggerpressed = Robot::oi->getGunnerJoystick()->GetRawButton(1);
		if(leftTriggerpressed > 0 && leftTriggerpressed < 0)
		{
			Robot::shooterSubsystem->Shoot(1)
		}
		else
		{
			Robot::shooterSubsystem->Shoot(0)
		}
>>>>>>> origin/master
}

// Make this return true when this Command no longer needs to run execute()
bool ShooterControl::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void ShooterControl::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ShooterControl::Interrupted() {

}
